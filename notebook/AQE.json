{
	"name": "AQE",
	"properties": {
		"folder": {
			"name": "final"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f0c9b40c-db17-446e-8a44-fb24cbd4d0ba"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_sparksql",
				"display_name": "sql"
			},
			"language_info": {
				"name": "sql"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE DATABASE IF NOT EXISTS sales_demo;"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"USE sales_demo;\r\n",
					"\r\n",
					"DROP TABLE IF EXISTS sales;\r\n",
					"DROP TABLE IF EXISTS products;\r\n",
					"\r\n",
					"\r\n",
					"-- Creating products Table\r\n",
					"\r\n",
					"CREATE TABLE products\r\n",
					"USING PARQUET\r\n",
					"AS \r\n",
					"SELECT id as product_id,\r\n",
					"CAST(rand() * 1000 AS INT) AS product_price   -- 0.0 and 1.0\r\n",
					"FROM RANGE(30000000);\r\n",
					"\r\n",
					"\r\n",
					"-- Creating Sales table\r\n",
					"\r\n",
					"CREATE TABLE sales\r\n",
					"USING PARQUET\r\n",
					"AS\r\n",
					"SELECT CASE WHEN rand() < 0.7 THEN 5 ELSE CAST(rand() * 30000000 AS INT) END AS product_id, -- 0.0 to 1.0 \r\n",
					"CAST(rand() * 100 AS INT) AS sales_quantity,\r\n",
					"DATE_ADD(current_date(), - CAST(rand() * 360 AS INT)) AS sale_date\r\n",
					"FROM RANGE(100000000);"
				],
				"execution_count": 20
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Dynamically cosalesce Shuffle partitions"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.get(\"spark.sql.adaptive.enabled\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.adaptive.enabled\",\"false\")"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.get(\"spark.sql.adaptive.enabled\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"USE sales_demo;\r\n",
					"\r\n",
					"\r\n",
					"SELECT sale_date, SUM(sales_quantity) AS Total_Quantity\r\n",
					"FROM sales\r\n",
					"GROUP BY sale_date\r\n",
					"ORDER BY Total_Quantity DESC;"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.adaptive.enabled\",\"true\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.get(\"spark.sql.adaptive.enabled\")"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"USE sales_demo;\r\n",
					"\r\n",
					"\r\n",
					"SELECT sale_date, SUM(sales_quantity) AS Total_Quantity\r\n",
					"FROM sales\r\n",
					"GROUP BY sale_date\r\n",
					"ORDER BY Total_Quantity DESC;"
				],
				"execution_count": 13
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Dynamically switch join strategy"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.adaptive.enabled\",\"false\")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"USE sales_demo;\r\n",
					"\r\n",
					"EXPLAIN FORMATTED\r\n",
					"SELECT sale_date, sum(sales_quantity * product_price) AS total_sales\r\n",
					"FROM sales S\r\n",
					"JOIN products P ON S.product_id = P.product_id\r\n",
					"WHERE product_price < 10\r\n",
					"GROUP BY sale_date\r\n",
					"ORDER BY total_sales DESC;"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- Join without AQE\r\n",
					"\r\n",
					"USE sales_demo;\r\n",
					"\r\n",
					"SELECT sale_date, sum(sales_quantity * product_price) AS total_sales\r\n",
					"FROM sales S\r\n",
					"JOIN products P ON S.product_id = P.product_id\r\n",
					"WHERE product_price < 10\r\n",
					"GROUP BY sale_date\r\n",
					"ORDER BY total_sales DESC;"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.adaptive.enabled\",\"true\")"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- Join using AQE\r\n",
					"\r\n",
					"USE sales_demo;\r\n",
					"\r\n",
					"SELECT sale_date, sum(sales_quantity * product_price) AS total_sales\r\n",
					"FROM sales S\r\n",
					"JOIN products P ON S.product_id = P.product_id\r\n",
					"WHERE product_price < 10\r\n",
					"GROUP BY sale_date\r\n",
					"ORDER BY total_sales DESC;"
				],
				"execution_count": 19
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Dynamically optimize skewed data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.adaptive.enabled\",\"false\")"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- SKewed Join without AQE\r\n",
					"\r\n",
					"USE sales_demo;\r\n",
					"\r\n",
					"SELECT sale_date, sum(sales_quantity * product_price) AS total_sales\r\n",
					"FROM sales S\r\n",
					"JOIN products P ON S.product_id = P.product_id\r\n",
					"GROUP BY sale_date\r\n",
					"ORDER BY total_sales DESC;"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"spark.conf.set(\"spark.sql.adaptive.enabled\",\"true\")"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- SKewed Join with  AQE\r\n",
					"\r\n",
					"USE sales_demo;\r\n",
					"\r\n",
					"SELECT sale_date, sum(sales_quantity * product_price) AS total_sales\r\n",
					"FROM sales S\r\n",
					"JOIN products P ON S.product_id = P.product_id\r\n",
					"GROUP BY sale_date\r\n",
					"ORDER BY total_sales DESC;"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}